{
  "mmsi": "338543654",
  "name": "Tivoli",
  "communication": {
    "callsignVhf": "KM6BKY"
  },
  "design": {
    "draft": {
      "meta": {
        "description": "The draft of the vessel",
        "properties": {
          "minimum": {
            "description": "The minimum draft of the vessel",
            "type": "number",
            "units": "m"
          },
          "maximum": {
            "description": "The maximum draft of the vessel",
            "type": "number",
            "units": "m"
          },
          "current": {
            "description": "The current draft of the vessel",
            "type": "number",
            "units": "m"
          },
          "canoe": {
            "description": "The draft of the vessel without protrusions such as keel, centerboard, rudder",
            "type": "number",
            "units": "m"
          }
        }
      },
      "value": {
        "maximum": 2
      },
      "$source": "defaults",
      "timestamp": "2025-10-20T02:38:33.997Z"
    },
    "length": {
      "meta": {
        "description": "The various lengths of the vessel",
        "properties": {
          "overall": {
            "type": "number",
            "description": "Length overall",
            "units": "m"
          },
          "hull": {
            "type": "number",
            "description": "Length of hull",
            "units": "m"
          },
          "waterline": {
            "type": "number",
            "description": "Length at waterline",
            "units": "m"
          }
        }
      },
      "value": {
        "overall": 13
      },
      "$source": "defaults",
      "timestamp": "2025-10-20T02:38:33.997Z"
    },
    "beam": {
      "meta": {
        "units": "m",
        "description": "Data should be of type number."
      },
      "value": 4,
      "$source": "defaults",
      "timestamp": "2025-10-20T02:38:33.997Z"
    },
    "airHeight": {
      "meta": {
        "units": "m",
        "description": "Data should be of type number."
      },
      "value": 20,
      "$source": "defaults",
      "timestamp": "2025-10-20T02:38:33.997Z"
    },
    "aisShipType": {
      "meta": {
        "description": "The ais ship type see http://www.bosunsmate.org/ais/message5.php",
        "properties": {
          "id": {
            "type": "number",
            "description": "The ship type number"
          },
          "name": {
            "type": "string",
            "description": "The ship type name"
          }
        }
      },
      "value": {
        "name": "Sailing",
        "id": 36
      },
      "$source": "defaults",
      "timestamp": "2025-10-20T02:38:33.997Z"
    }
  },
  "entertainment": {
    "device": {
      "fusion1": {
        "outputAlarms": {
          "meta": {
            "supportsPut": true
          },
          "value": false,
          "$source": "fusionstereo",
          "timestamp": "2025-10-20T02:38:35.107Z"
        }
      }
    }
  },
  "electrical": {
    "batteries": {
      "house": {
        "capacity": {
          "dischargeSinceFull": {
            "meta": {
              "units": "C",
              "description": "Data should be of type number."
            },
            "value": 0,
            "$source": "signalk-victron-ble.D0:5B:3A:98:8A:90",
            "timestamp": "2025-10-22T07:54:04.325622Z"
          },
          "stateOfCharge": {
            "meta": {
              "units": "ratio",
              "description": "Data should be of type number."
            },
            "value": 1,
            "$source": "signalk-victron-ble.D0:5B:3A:98:8A:90",
            "timestamp": "2025-10-22T07:54:04.325622Z"
          },
          "timeRemaining": {
            "meta": {
              "units": "s",
              "description": "Data should be of type number."
            },
            "value": 864000,
            "$source": "signalk-victron-ble.D0:5B:3A:98:8A:90",
            "timestamp": "2025-10-22T07:00:02.420835Z"
          }
        },
        "current": {
          "meta": {
            "units": "A",
            "description": "Current flowing out (+ve) or in (-ve) to the device"
          },
          "value": 0,
          "$source": "signalk-victron-ble.D0:5B:3A:98:8A:90",
          "timestamp": "2025-10-22T07:54:04.325622Z"
        },
        "power": {
          "meta": {},
          "value": 0,
          "$source": "signalk-victron-ble.D0:5B:3A:98:8A:90",
          "timestamp": "2025-10-22T07:54:04.325622Z"
        },
        "voltage": {
          "meta": {
            "units": "V",
            "description": "Voltage measured at or as close as possible to the device"
          },
          "value": 13.29,
          "$source": "signalk-victron-ble.D0:5B:3A:98:8A:90",
          "timestamp": "2025-10-22T07:54:04.325622Z"
        }
      }
    }
  },
  "environment": {
    "sun": {
      "meta": {},
      "value": "night",
      "$source": "derived-data",
      "timestamp": "2025-10-22T07:53:31.629Z"
    },
    "mode": {
      "meta": {
        "description": "Mode of the vessel based on the current conditions. Can be combined with navigation.state to control vessel signals eg switch to night mode for instrumentation and lights, or make sound signals for fog."
      },
      "value": "night",
      "$source": "derived-data",
      "timestamp": "2025-10-22T07:53:31.629Z"
    },
    "sunlight": {
      "times": {
        "sunrise": {
          "meta": {},
          "value": "2025-10-21T14:25:06.178Z",
          "$source": "derived-data",
          "timestamp": "2025-10-22T07:53:43.268Z"
        },
        "sunriseEnd": {
          "meta": {},
          "value": "2025-10-21T14:27:52.509Z",
          "$source": "derived-data",
          "timestamp": "2025-10-22T07:53:43.268Z"
        },
        "goldenHourEnd": {
          "meta": {},
          "value": "2025-10-21T15:01:04.450Z",
          "$source": "derived-data",
          "timestamp": "2025-10-22T07:53:43.268Z"
        },
        "solarNoon": {
          "meta": {},
          "value": "2025-10-21T19:55:15.651Z",
          "$source": "derived-data",
          "timestamp": "2025-10-22T07:53:43.268Z"
        },
        "goldenHour": {
          "meta": {},
          "value": "2025-10-22T00:49:26.852Z",
          "$source": "derived-data",
          "timestamp": "2025-10-22T07:53:43.268Z"
        },
        "sunsetStart": {
          "meta": {},
          "value": "2025-10-22T01:22:38.793Z",
          "$source": "derived-data",
          "timestamp": "2025-10-22T07:53:43.268Z"
        },
        "sunset": {
          "meta": {},
          "value": "2025-10-22T01:25:25.124Z",
          "$source": "derived-data",
          "timestamp": "2025-10-22T07:53:43.268Z"
        },
        "dusk": {
          "meta": {},
          "value": "2025-10-22T01:52:04.364Z",
          "$source": "derived-data",
          "timestamp": "2025-10-22T07:53:43.268Z"
        },
        "nauticalDusk": {
          "meta": {},
          "value": "2025-10-22T02:22:39.731Z",
          "$source": "derived-data",
          "timestamp": "2025-10-22T07:53:43.268Z"
        },
        "night": {
          "meta": {},
          "value": "2025-10-22T02:53:03.554Z",
          "$source": "derived-data",
          "timestamp": "2025-10-22T07:53:43.268Z"
        },
        "nadir": {
          "meta": {},
          "value": "2025-10-21T07:55:15.651Z",
          "$source": "derived-data",
          "timestamp": "2025-10-22T07:53:43.268Z"
        },
        "nightEnd": {
          "meta": {},
          "value": "2025-10-21T12:57:27.748Z",
          "$source": "derived-data",
          "timestamp": "2025-10-22T07:53:43.268Z"
        },
        "nauticalDawn": {
          "meta": {},
          "value": "2025-10-21T13:27:51.571Z",
          "$source": "derived-data",
          "timestamp": "2025-10-22T07:53:43.268Z"
        },
        "dawn": {
          "meta": {},
          "value": "2025-10-21T13:58:26.938Z",
          "$source": "derived-data",
          "timestamp": "2025-10-22T07:53:43.268Z"
        }
      }
    },
    "tide": {
      "stationName": {
        "meta": {},
        "value": "Rincon Point, Pier 22 1/2",
        "$source": "tides",
        "timestamp": "2025-10-22T07:53:35.730Z"
      },
      "heightNow": {
        "meta": {
          "units": "m",
          "description": "The current tide height  relative to lowest astronomical tide (LAT/Chart Datum)"
        },
        "value": 1.501,
        "$source": "tides",
        "timestamp": "2025-10-22T07:53:35.730Z"
      },
      "heightHigh": {
        "meta": {
          "units": "m",
          "description": "Next high tide height  relative to lowest astronomical tide (LAT/Chart Datum)"
        },
        "value": 1.523,
        "$source": "tides",
        "timestamp": "2025-10-22T07:53:35.730Z"
      },
      "timeHigh": {
        "meta": {
          "units": "RFC 3339 (UTC)",
          "description": "RFC 3339 (UTC only without local offset) string representing date and time."
        },
        "value": "2025-10-22T08:25:00.000Z",
        "$source": "tides",
        "timestamp": "2025-10-22T07:53:35.730Z"
      },
      "heightLow": {
        "meta": {
          "units": "m",
          "description": "The next low tide height relative to lowest astronomical tide (LAT/Chart Datum)"
        },
        "value": 0.721,
        "$source": "tides",
        "timestamp": "2025-10-22T07:53:35.730Z"
      },
      "timeLow": {
        "meta": {
          "units": "RFC 3339 (UTC)",
          "description": "RFC 3339 (UTC only without local offset) string representing date and time."
        },
        "value": "2025-10-22T13:23:00.000Z",
        "$source": "tides",
        "timestamp": "2025-10-22T07:53:35.730Z"
      }
    },
    "inside": {
      "airQuality": {
        "tvoc": {
          "meta": {},
          "value": 4,
          "$source": "i2c-sensors.inside",
          "timestamp": "2025-10-22T07:24:09.477506+00:00"
        },
        "eco2": {
          "meta": {},
          "value": 408,
          "$source": "i2c-sensors.inside",
          "timestamp": "2025-10-22T07:24:09.477506+00:00"
        }
      },
      "temperature": {
        "meta": {
          "units": "K",
          "description": "Temperature"
        },
        "value": 294.0287670973688,
        "$source": "i2c-sensors.inside",
        "timestamp": "2025-10-22T07:54:04.279861+00:00"
      },
      "humidity": {
        "meta": {
          "description": "This regex pattern is used for validation of the identifier for the environmental zone, eg. engineRoom, mainCabin, refrigerator"
        },
        "value": 0.6180733757496684,
        "$source": "i2c-sensors.inside",
        "timestamp": "2025-10-22T07:54:04.279861+00:00"
      },
      "pressure": {
        "meta": {
          "units": "Pa",
          "description": "Pressure in zone"
        },
        "value": 101830.94843151885,
        "$source": "i2c-sensors.inside",
        "timestamp": "2025-10-22T07:54:04.279861+00:00"
      }
    }
  },
  "navigation": {
    "position": {
      "meta": {
        "description": "The position of the vessel in 2 or 3 dimensions (WGS84 datum)",
        "properties": {
          "longitude": {
            "type": "number",
            "description": "Longitude",
            "units": "deg",
            "example": 4.98765245
          },
          "latitude": {
            "type": "number",
            "description": "Latitude",
            "units": "deg",
            "example": 52.0987654
          },
          "altitude": {
            "type": "number",
            "description": "Altitude",
            "units": "m"
          }
        }
      },
      "value": {
        "longitude": -122.3854855,
        "latitude": 37.780996333333334
      },
      "$source": "ais.GP",
      "timestamp": "2025-10-22T07:54:04.000Z",
      "sentence": "GLL"
    },
    "courseRhumbline": {
      "nextPoint": {
        "position": {
          "meta": {},
          "value": {
            "longitude": -122.37868333333333,
            "latitude": 37.78306666666667
          },
          "$source": "opencpn.EC",
          "timestamp": "2025-10-22T01:53:42.371Z",
          "sentence": "RMB",
          "values": {
            "opencpn.EC": {
              "value": {
                "longitude": -122.37868333333333,
                "latitude": 37.78306666666667
              },
              "sentence": "RMB",
              "timestamp": "2025-10-22T01:53:42.371Z"
            },
            "courseApi": {
              "value": {
                "longitude": -122.37868333333333,
                "latitude": 37.78306666666667
              },
              "timestamp": "2025-10-20T02:38:36.546Z"
            }
          }
        },
        "bearingTrue": {
          "meta": {},
          "value": 1.1995473418770748,
          "$source": "opencpn.EC",
          "timestamp": "2025-10-22T01:53:42.371Z",
          "sentence": "RMB"
        },
        "velocityMadeGood": {
          "meta": {},
          "value": 0,
          "$source": "opencpn.EC",
          "timestamp": "2025-10-22T01:53:42.371Z",
          "sentence": "RMB"
        },
        "distance": {
          "meta": {},
          "value": 638.9400005392653,
          "$source": "opencpn.EC",
          "timestamp": "2025-10-22T01:53:42.371Z",
          "sentence": "RMB"
        },
        "ID": {
          "meta": {},
          "value": "002",
          "$source": "opencpn.EC",
          "timestamp": "2025-10-22T01:53:42.372Z",
          "sentence": "APB"
        },
        "value": {
          "href": {
            "meta": {},
            "value": null,
            "$source": "courseApi",
            "timestamp": "2025-10-20T02:38:36.546Z"
          },
          "type": {
            "meta": {},
            "value": "Location",
            "$source": "courseApi",
            "timestamp": "2025-10-20T02:38:36.546Z"
          }
        },
        "arrivalCircle": {
          "meta": {},
          "value": 0,
          "$source": "courseApi",
          "timestamp": "2025-10-20T02:38:36.546Z"
        }
      },
      "crossTrackError": {
        "meta": {
          "units": "m",
          "description": "The distance from the vessel's present position to the closest point on a line (track) between previousPoint and nextPoint. A negative number indicates that the vessel is currently to the left of this line (and thus must steer right to compensate), a positive number means the vessel is to the right of the line (steer left to compensate)."
        },
        "value": 3.704000003126176,
        "$source": "opencpn.EC",
        "timestamp": "2025-10-22T01:53:42.372Z",
        "sentence": "XTE"
      },
      "bearingTrackTrue": {
        "meta": {
          "units": "rad",
          "description": "The bearing of a line between previousPoint and nextPoint, relative to true north."
        },
        "value": 1.2044342637837748,
        "$source": "opencpn.EC",
        "timestamp": "2025-10-22T01:53:42.372Z",
        "sentence": "APB"
      },
      "bearingOriginToDestinationTrue": {
        "meta": {},
        "value": 1.2044342637837748,
        "$source": "opencpn.EC",
        "timestamp": "2025-10-22T01:53:42.372Z",
        "sentence": "APB"
      },
      "bearingToDestinationTrue": {
        "meta": {},
        "value": 1.1995473418770748,
        "$source": "opencpn.EC",
        "timestamp": "2025-10-22T01:53:42.372Z",
        "sentence": "APB"
      },
      "activeRoute": {
        "href": {
          "meta": {
            "description": "A reference (URL) to the presently active route, in resources."
          },
          "value": null,
          "$source": "courseApi",
          "timestamp": "2025-10-20T02:38:36.546Z"
        },
        "startTime": {
          "meta": {
            "description": "The time this route was activated"
          },
          "value": "2025-10-20T02:38:36.546Z",
          "$source": "courseApi",
          "timestamp": "2025-10-20T02:38:36.546Z"
        }
      },
      "previousPoint": {
        "position": {
          "meta": {
            "description": "The position of lastPoint in two dimensions",
            "properties": {
              "longitude": {
                "type": "number",
                "description": "Longitude",
                "units": "deg",
                "example": 4.98765245
              },
              "latitude": {
                "type": "number",
                "description": "Latitude",
                "units": "deg",
                "example": 52.0987654
              },
              "altitude": {
                "type": "number",
                "description": "Altitude",
                "units": "m"
              }
            }
          },
          "value": {
            "longitude": -122.38547516666667,
            "latitude": 37.7810065
          },
          "$source": "courseApi",
          "timestamp": "2025-10-20T02:38:36.546Z"
        },
        "value": {
          "type": {
            "meta": {},
            "value": "VesselPosition",
            "$source": "courseApi",
            "timestamp": "2025-10-20T02:38:36.546Z"
          }
        }
      }
    },
    "gnss": {
      "methodQuality": {
        "meta": {
          "description": "Quality of the satellite fix"
        },
        "value": "GNSS Fix",
        "$source": "ais.GP",
        "timestamp": "2025-10-22T07:54:04.000Z",
        "sentence": "GGA"
      },
      "satellites": {
        "meta": {
          "description": "Number of satellites"
        },
        "value": 8,
        "$source": "ais.GP",
        "timestamp": "2025-10-22T07:54:04.000Z",
        "sentence": "GGA"
      },
      "antennaAltitude": {
        "meta": {
          "units": "m",
          "description": "Altitude of antenna"
        },
        "value": 2.4,
        "$source": "ais.GP",
        "timestamp": "2025-10-22T07:54:04.000Z",
        "sentence": "GGA"
      },
      "horizontalDilution": {
        "meta": {
          "description": "Horizontal Dilution of Precision"
        },
        "value": 1.13,
        "$source": "ais.GP",
        "timestamp": "2025-10-22T07:54:04.000Z",
        "sentence": "GGA"
      },
      "differentialAge": {
        "meta": {
          "units": "s",
          "description": "Age of DGPS data"
        },
        "value": 0,
        "$source": "ais.GP",
        "timestamp": "2025-10-22T07:54:04.000Z",
        "sentence": "GGA"
      },
      "differentialReference": {
        "meta": {
          "description": "ID of DGPS base station"
        },
        "value": 0,
        "$source": "ais.GP",
        "timestamp": "2025-10-22T07:54:04.000Z",
        "sentence": "GGA"
      }
    },
    "courseGreatCircle": {
      "activeRoute": {
        "href": {
          "meta": {
            "description": "A reference (URL) to the presently active route, in resources."
          },
          "value": null,
          "$source": "courseApi",
          "timestamp": "2025-10-20T02:38:36.546Z"
        },
        "startTime": {
          "meta": {
            "description": "The time this route was activated"
          },
          "value": "2025-10-20T02:38:36.546Z",
          "$source": "courseApi",
          "timestamp": "2025-10-20T02:38:36.546Z"
        }
      },
      "nextPoint": {
        "value": {
          "href": {
            "meta": {},
            "value": null,
            "$source": "courseApi",
            "timestamp": "2025-10-20T02:38:36.546Z"
          },
          "type": {
            "meta": {},
            "value": "Location",
            "$source": "courseApi",
            "timestamp": "2025-10-20T02:38:36.546Z"
          }
        },
        "position": {
          "meta": {},
          "value": {
            "longitude": -122.37868333333333,
            "latitude": 37.78306666666667
          },
          "$source": "courseApi",
          "timestamp": "2025-10-20T02:38:36.546Z"
        },
        "arrivalCircle": {
          "meta": {},
          "value": 0,
          "$source": "courseApi",
          "timestamp": "2025-10-20T02:38:36.546Z"
        }
      },
      "previousPoint": {
        "position": {
          "meta": {
            "description": "The position of lastPoint in two dimensions",
            "properties": {
              "longitude": {
                "type": "number",
                "description": "Longitude",
                "units": "deg",
                "example": 4.98765245
              },
              "latitude": {
                "type": "number",
                "description": "Latitude",
                "units": "deg",
                "example": 52.0987654
              },
              "altitude": {
                "type": "number",
                "description": "Altitude",
                "units": "m"
              }
            }
          },
          "value": {
            "longitude": -122.38547516666667,
            "latitude": 37.7810065
          },
          "$source": "courseApi",
          "timestamp": "2025-10-20T02:38:36.546Z"
        },
        "value": {
          "type": {
            "meta": {},
            "value": "VesselPosition",
            "$source": "courseApi",
            "timestamp": "2025-10-20T02:38:36.546Z"
          }
        }
      }
    },
    "course": {
      "calcValues": {
        "calcMethod": {
          "meta": {
            "description": "Calculation type used (GreatCircle or Rhumbline)."
          },
          "value": "GreatCircle",
          "$source": "course-provider",
          "timestamp": "2025-10-22T07:54:05.076Z"
        },
        "bearingTrackTrue": {
          "meta": {
            "description": "The bearing of a line between previousPoint and nextPoint, relative to true north.",
            "units": "rad"
          },
          "value": 1.204302474048646,
          "$source": "course-provider",
          "timestamp": "2025-10-22T07:54:05.076Z"
        },
        "bearingTrackMagnetic": {
          "meta": {
            "description": "The bearing of a line between previousPoint and nextPoint, relative to magnetic north.",
            "units": "rad"
          },
          "value": 1.4265457555802439,
          "$source": "course-provider",
          "timestamp": "2025-10-22T07:54:05.076Z"
        },
        "crossTrackError": {
          "meta": {
            "description": "The distance from the vessel's present position to the closest point on a line (track) between previousPoint and nextPoint. A negative number indicates that the vessel is currently to the left of this line (and thus must steer right to compensate), a positive number means the vessel is to the right of the line (steer left to compensate).",
            "units": "m"
          },
          "value": 0.7299815555563873,
          "$source": "course-provider",
          "timestamp": "2025-10-22T07:54:05.076Z"
        },
        "previousPoint": {
          "distance": {
            "meta": {
              "description": "The distance in meters between the vessel's present position and the previousPoint.",
              "units": "m"
            },
            "value": 1.4500669750191422,
            "$source": "course-provider",
            "timestamp": "2025-10-22T07:54:05.076Z"
          }
        },
        "distance": {
          "meta": {
            "description": "The distance in meters between the vessel's present position and the nextPoint.",
            "units": "m"
          },
          "value": 640.5874399618293,
          "$source": "course-provider",
          "timestamp": "2025-10-22T07:54:05.076Z"
        },
        "bearingTrue": {
          "meta": {
            "description": "The bearing of a line between the vessel's current position and nextPoint, relative to true north.",
            "units": "rad"
          },
          "value": 1.2031628130997774,
          "$source": "course-provider",
          "timestamp": "2025-10-22T07:54:05.076Z"
        },
        "bearingMagnetic": {
          "meta": {
            "description": "The bearing of a line between the vessel's current position and nextPoint, relative to magnetic north.",
            "units": "rad"
          },
          "value": 1.4254060946313751,
          "$source": "course-provider",
          "timestamp": "2025-10-22T07:54:05.076Z"
        },
        "velocityMadeGood": {
          "meta": {
            "description": "The velocity component of the vessel towards the nextPoint.",
            "units": "m/s"
          },
          "value": null,
          "$source": "course-provider",
          "timestamp": "2025-10-22T07:54:05.076Z"
        },
        "timeToGo": {
          "meta": {
            "description": "Time in seconds to reach nextPoint's perpendicular with current speed & direction.",
            "units": "s"
          },
          "value": null,
          "$source": "course-provider",
          "timestamp": "2025-10-22T07:54:05.076Z"
        },
        "estimatedTimeOfArrival": {
          "meta": {
            "description": "The estimated time of arrival at nextPoint position."
          },
          "value": null,
          "$source": "course-provider",
          "timestamp": "2025-10-22T07:54:05.076Z"
        },
        "route": {
          "timeToGo": {
            "meta": {
              "description": "Time in seconds to reach final destination with current speed & direction.",
              "units": "s"
            },
            "value": null,
            "$source": "course-provider",
            "timestamp": "2025-10-22T07:54:05.076Z"
          },
          "estimatedTimeOfArrival": {
            "meta": {
              "description": "The estimated time of arrival at final destination."
            },
            "value": null,
            "$source": "course-provider",
            "timestamp": "2025-10-22T07:54:05.076Z"
          },
          "distance": {
            "meta": {
              "description": "The remaining distance along the route to reach the final destination.",
              "units": "m"
            },
            "value": null,
            "$source": "course-provider",
            "timestamp": "2025-10-22T07:54:05.076Z"
          }
        },
        "targetSpeed": {
          "meta": {
            "description": "The average speed required to arrive at the destination at the targetArrivalTime.",
            "units": "m/s"
          },
          "value": null,
          "$source": "course-provider",
          "timestamp": "2025-10-22T07:54:05.076Z"
        }
      }
    },
    "magneticVariation": {
      "meta": {
        "units": "rad",
        "description": "The magnetic variation (declination) at the current position that must be added to the magnetic heading to derive the true heading. Easterly variations are positive and Westerly variations are negative (in Radians)."
      },
      "value": 0.22224328153159784,
      "$source": "i2c-sensors.magnetic-variation",
      "timestamp": "2025-10-22T07:51:40.348778+00:00"
    },
    "attitude": {
      "rateOfTurn": {
        "meta": {},
        "value": -3.807717747333858e-05,
        "$source": "i2c-sensors.inside",
        "timestamp": "2025-10-22T07:54:04.279861+00:00"
      },
      "roll": {
        "meta": {},
        "value": -0.03163409269239725,
        "$source": "i2c-sensors.inside",
        "timestamp": "2025-10-22T07:54:04.279861+00:00"
      },
      "pitch": {
        "meta": {},
        "value": 0.03904434655044094,
        "$source": "i2c-sensors.inside",
        "timestamp": "2025-10-22T07:54:04.279861+00:00"
      },
      "yaw": {
        "meta": {},
        "value": 6.136843979428379,
        "$source": "i2c-sensors.inside",
        "timestamp": "2025-10-22T07:54:04.279861+00:00"
      }
    }
  },
  "steering": {
    "autopilot": {
      "target": {
        "headingTrue": {
          "meta": {
            "units": "rad",
            "description": "Data should be of type number."
          },
          "value": 1.1995473418770748,
          "$source": "opencpn.EC",
          "timestamp": "2025-10-22T01:53:42.372Z",
          "sentence": "APB"
        }
      }
    }
  },
  "notifications": {
    "arrivalCircleEntered": {
      "meta": {},
      "value": null,
      "$source": "opencpn.EC",
      "timestamp": "2025-10-22T01:53:42.372Z",
      "sentence": "APB"
    },
    "perpendicularPassed": {
      "meta": {},
      "value": null,
      "$source": "opencpn.EC",
      "timestamp": "2025-10-22T01:53:42.372Z",
      "sentence": "APB"
    }
  },
  "performance": {
    "velocityMadeGoodToWaypoint": {
      "meta": {
        "units": "m/s",
        "description": "Data should be of type number."
      },
      "value": null,
      "$source": "course-provider",
      "timestamp": "2025-10-22T07:54:05.076Z"
    }
  },
  "displays": {
    "757e139b-9886-4974-acf3-945d213be33b": {
      "activeScreen": {
        "meta": {},
        "value": null,
        "$source": "kip",
        "timestamp": "2025-10-22T01:58:03.094Z"
      }
    }
  }
}